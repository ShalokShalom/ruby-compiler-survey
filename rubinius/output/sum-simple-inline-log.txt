JIT: compiling Object#sum (1580862383.417881)
| inlining: Array#size into sum
|| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#< into sum. primitive fixnum_compare_operation (Fixnum)
| inlining: Array#[] into sum
|| inlining: Fixnum#=== into []. primitive fixnum_s_eqq (<nil>)
|| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
|| inline ivar read: Array#@total (slot: 0)
|| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
|| NOT inlining: Rubinius::Type#coerce_to_collection_index into []. too few sends: (2 / 34963) (<nil>) (interp)
|| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
|| inline ivar read: Array#@total (slot: 0)
|| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
|| inline ivar read: Array#@total (slot: 0)
|| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
|| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
|| inline ivar read: Array#@total (slot: 0)
|| inlining: Fixnum#> into []. primitive fixnum_compare_operation (Fixnum)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@start (slot: 2)
|| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
|| inlining: Array#new_range into []. generic primitive: jit_stub_array_new_range (Array)
||+ eliding redundant guard: class Array (6)
|| inline ivar read: Array#@total (slot: 0)
|| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
|| inline ivar read: Array#@tuple (slot: 1)
|| inline ivar read: Array#@start (slot: 2)
|| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
|| inlining: Rubinius::Tuple#[] into []. primitive tuple_at (Rubinius::Tuple)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@total (slot: 0)
|| inline ivar read: Array#@tuple (slot: 1)
|| inline ivar read: Array#@start (slot: 2)
| inlining: Fixnum#+ into sum. primitive fixnum_add (Fixnum)
| inlining: Fixnum#+ into sum. primitive fixnum_add (Fixnum)
JIT: compiling Array#[] (1580862383.658370)
| inlining: Fixnum#=== into []. primitive fixnum_s_eqq (<nil>)
| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
| NOT inlining: Rubinius::Type#coerce_to_collection_index into []. too few sends: (2 / 32000) (<nil>) (interp)
| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#> into []. primitive fixnum_compare_operation (Fixnum)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@start (slot: 2)
| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
| inlining: Array#new_range into []. generic primitive: jit_stub_array_new_range (Array)
| inline ivar read: Array#@total (slot: 0)
| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
| inline ivar read: Array#@tuple (slot: 1)
| inline ivar read: Array#@start (slot: 2)
| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
| inlining: Rubinius::Tuple#[] into []. primitive tuple_at (Rubinius::Tuple)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@total (slot: 0)
| inline ivar read: Array#@tuple (slot: 1)
| inline ivar read: Array#@start (slot: 2)
JIT: compiling Object#__script__ (1580862383.850567)
| inlining: Rubinius::VariableScope#method_visibility into __script__
|| inline ivar read: Rubinius::VariableScope#@method_visibility (abort, using slow lookup)
|| slow ivar read: @method_visibility
|| inline ivar read: Rubinius::VariableScope#@method_visibility (abort, using slow lookup)
|| slow ivar read: @method_visibility
|| inlining: Rubinius::VariableScope#script? into method_visibility. generic primitive: jit_stub_variable_scope_script (Rubinius::VariableScope)
||+ eliding redundant guard: class Rubinius::VariableScope (103)
|| inlining: Rubinius::VariableScope#top_level_visibility? into method_visibility. generic primitive: jit_stub_variable_scope_top_level_visibility (Rubinius::VariableScope)
||+ eliding redundant guard: class Rubinius::VariableScope (103)
|| inline ivar read: Rubinius::VariableScope#@parent (slot: 3)
|| inline ivar read: Rubinius::VariableScope#@parent (slot: 3)
| inlining: Rubinius#add_defn_method into __script__
|| inlining: Rubinius::Type#object_kind_of? into add_defn_method. primitive Type.object_kind_of (<nil>)
||| inlining: direct class used for kind_of (against String)
|| inlining: Rubinius::ConstantScope#for_method_definition into add_defn_method
||| inline ivar read: Rubinius::ConstantScope#@disabled_for_methods (abort, using slow lookup)
||| slow ivar read: @disabled_for_methods
||| inline ivar read: Rubinius::ConstantScope#@current_module (slot: 1)
||| inline ivar read: Rubinius::ConstantScope#@current_module (slot: 1)
||| inline ivar read: Rubinius::ConstantScope#@module (slot: 0)
|| inlining: Rubinius::Type#singleton_class_object into add_defn_method. generic primitive: jit_stub_vm_singleton_class_object (<nil>)
|| inlining: Rubinius::Type#object_kind_of? into add_defn_method. primitive Type.object_kind_of (<nil>)
||| inlining: direct class used for kind_of (against Integer / Numeric)
|| inlining: Rubinius#add_method into add_defn_method
||+ eliding redundant guard: class <nil> (457)
||| inlining: Rubinius::Type#singleton_class_object into add_method. generic primitive: jit_stub_vm_singleton_class_object (<nil>)
||| inlining: Rubinius::Type#object_kind_of? into add_method. primitive Type.object_kind_of (<nil>)
|||| inlining: direct class used for kind_of (against String)
||| inlining: Module#method_table into add_method (Class)
|||| inline ivar read: Class#@method_table (slot: 0)
||| inlining: Module#method_table into add_method
|||| inline ivar read: <nil>#@method_table (slot: 0)
||| inlining: Module#method_table into add_method
|||| inline ivar read: <nil>#@method_table (slot: 0)
||| inlining: Rubinius::MethodTable#store into add_method. generic primitive: jit_stub_methodtable_store (Rubinius::MethodTable)
||| inlining: Rubinius::VM#reset_method_cache into add_method. generic primitive: jit_stub_vm_reset_method_cache (<nil>)
||| inlining: Kernel#equal? into add_method. primitive object_equal (Symbol)
|||+ eliding guard: detected symbol
||| inlining: Rubinius::Type#singleton_class_object into add_method. generic primitive: jit_stub_vm_singleton_class_object (<nil>)
||| inlining: Rubinius::Type#object_kind_of? into add_method. primitive Type.object_kind_of (<nil>)
|||| inlining: direct class used for kind_of (against Integer / Numeric)
||| inlining: Kernel#singleton_method_added into add_method
||| inlining: Kernel#singleton_method_added into add_method
||| inlining: Kernel#singleton_method_added into add_method
||| inline ivar read: <nil>#@add_method_hook (abort, using slow lookup)
||| slow ivar read: @add_method_hook
||| NOT inlining: Rubinius::Hook#trigger! into add_method. too complex (Rubinius::Hook) (interp)
||| inlining: Module#=== into add_method
|||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
||||| inlining: direct class used for kind_of (eliding because of statically known match)
||| inlining: Module#=== into add_method
|||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
||||| inlining: direct class used for kind_of (regular Ruby class)
||| inlining: Module#method_added into add_method
||| inlining: Module#method_added into add_method
||| inlining: Module#method_added into add_method
||| inlining: Module#add_ivars into add_method
|||| inlining: Module#=== into add_ivars
||||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
|||||| inlining: direct class used for kind_of (eliding because of statically known match)
|||| inlining: read to '@literals' on Rubinius::CompiledCode in #add_ivars||||+ eliding redundant guard: class Rubinius::CompiledCode (53)
 (slot: 18)
|||| inlining: Enumerable#find_all into add_ivars (Rubinius::Tuple) (w/ inline block)
||||| inlining: Rubinius::Tuple#each into find_all (w/ inline block)
|||||+ eliding redundant guard: class Rubinius::Tuple (5)
|||||| inlining: Rubinius::Tuple#fields into each. primitive tuple_fields (Rubinius::Tuple)
|||||| inlining: Fixnum#< into each. primitive fixnum_compare_operation (Fixnum)
|||||| inlining: Rubinius::Tuple#[] into each. primitive tuple_at (Rubinius::Tuple)
|||||| inlining block into: each
||||||| inlining block into: find_all
|||||||| inlining: Kernel#kind_of? into add_ivars. primitive Object#kind_of (Symbol)
||||||||| inlining: direct class used for kind_of (against Symbol)
|||||||| inlining: Kernel#kind_of? into add_ivars. primitive Object#kind_of (Rubinius::CompiledCode)
||||||||| inlining: direct class used for kind_of (against Symbol)
|||||||| inlining: Kernel#kind_of? into add_ivars. primitive Object#kind_of (String)
||||||||| inlining: direct class used for kind_of (against Symbol)
|||||||| inlining: Symbol#is_ivar? into add_ivars. generic primitive: jit_stub_symbol_is_ivar (Symbol)
||||||| inlining: Array#<< into find_all
|||||||| inline ivar read: Array#@total (slot: 0)
|||||||| inlining: Array#set_index into <<. generic primitive: jit_stub_array_aset (Array)
||||||||+ eliding redundant guard: class Array (6)
|||||| inlining: Fixnum#+ into each. primitive fixnum_add (Fixnum)
|||| inlining: Array#empty? into add_ivars
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Fixnum#== into empty?. primitive fixnum_compare_operation (Fixnum)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inline ivar write: @seen_ivars (slot: 5)
|||| inlining: Module#=== into add_ivars
||||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
|||||| inlining: direct class used for kind_of (regular Ruby class)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#include? into add_ivars
||||| inline ivar read: Array#@start (slot: 2)
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
||||| inline ivar read: Array#@tuple (slot: 1)
||||| inlining: Fixnum#< into include?. primitive fixnum_compare_operation (Fixnum)
||||| inlining: Rubinius::Tuple#[] into include?. primitive tuple_at (Rubinius::Tuple)
||||| inlining: Kernel#equal? into include?. primitive object_equal (Symbol)
||||| inlining: String#== into include?. generic primitive: jit_stub_string_equal (String)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#<< into add_ivars
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Array#set_index into <<. generic primitive: jit_stub_array_aset (Array)
|||||+ eliding redundant guard: class Array (6)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inline ivar write: @seen_ivars (slot: 5)
||| inlining: Module#add_ivars into add_method
|||| NOT inlining: Module#=== into add_ivars. too few sends: (1 / 121) (<nil>) (interp)
|||| inlining: read to '@literals' on Rubinius::CompiledCode in #add_ivars||||+ eliding redundant guard: class Rubinius::CompiledCode (53)
 (slot: 18)
|||| NOT inlining: Array#empty? into add_ivars. too few sends: (1 / 121) (Array) (interp)
|||| inline ivar read: Module#@seen_ivars (slot: 5)
|||| inline ivar write: @seen_ivars (slot: 5)
|||| inlining: Module#=== into add_ivars
||||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
|||||| inlining: direct class used for kind_of (regular Ruby class)
|||| inline ivar read: Module#@seen_ivars (slot: 5)
|||| inline ivar read: Module#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#include? into add_ivars
||||| inline ivar read: Array#@start (slot: 2)
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
||||| inline ivar read: Array#@tuple (slot: 1)
||||| inlining: Fixnum#< into include?. primitive fixnum_compare_operation (Fixnum)
||||| inlining: Rubinius::Tuple#[] into include?. primitive tuple_at (Rubinius::Tuple)
||||| inlining: Kernel#equal? into include?. primitive object_equal (Symbol)
||||| inlining: String#== into include?. generic primitive: jit_stub_string_equal (String)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
|||| inline ivar read: Module#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#<< into add_ivars
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Array#set_index into <<. generic primitive: jit_stub_array_aset (Array)
|||||+ eliding redundant guard: class Array (6)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inline ivar write: @seen_ivars (slot: 5)
||| inlining: Module#add_ivars into add_method
|||| NOT inlining: Module#=== into add_ivars. too few sends: (1 / 125) (<nil>) (interp)
|||| inlining: read to '@literals' on Rubinius::CompiledCode in #add_ivars||||+ eliding redundant guard: class Rubinius::CompiledCode (53)
 (slot: 18)
|||| NOT inlining: Array#empty? into add_ivars. too few sends: (1 / 125) (Array) (interp)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inline ivar write: @seen_ivars (slot: 5)
|||| inlining: Module#=== into add_ivars
||||| inlining: Rubinius::Type#object_kind_of? into ===. primitive Type.object_kind_of (<nil>)
|||||| inlining: direct class used for kind_of (regular Ruby class)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#include? into add_ivars
||||| inline ivar read: Array#@start (slot: 2)
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
||||| inline ivar read: Array#@tuple (slot: 1)
||||| inlining: Fixnum#< into include?. primitive fixnum_compare_operation (Fixnum)
||||| inlining: Rubinius::Tuple#[] into include?. primitive tuple_at (Rubinius::Tuple)
||||| inlining: Kernel#equal? into include?. primitive object_equal (Symbol)
||||| inlining: String#== into include?. generic primitive: jit_stub_string_equal (String)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
|||| inline ivar read: <nil>#@seen_ivars (slot: 5)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inlining: Array#<< into add_ivars
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Array#set_index into <<. generic primitive: jit_stub_array_aset (Array)
|||||+ eliding redundant guard: class Array (6)
|||| inlining: read to '@name' on Rubinius::AccessVariable in #add_ivars (slot: 2)
|||| inline ivar write: @seen_ivars (slot: 5)
||| inlining: Module#method_table into add_method
|||| inline ivar read: <nil>#@method_table (slot: 0)
||| inlining: Module#method_table into add_method
|||| inline ivar read: <nil>#@method_table (slot: 0)
||| inlining: Module#method_table into add_method
|||| inline ivar read: Module#@method_table (slot: 0)
||| inlining: Rubinius::MethodTable#store into add_method. generic primitive: jit_stub_methodtable_store (Rubinius::MethodTable)
||| inlining: Kernel#equal? into add_method. primitive object_equal (Symbol)
|||+ eliding guard: detected symbol
||| inlining: Rubinius#privatized_method? into add_method
|||+ eliding redundant guard: class <nil> (457)
|||| inlining: Array#include? into privatized_method?
||||+ eliding redundant guard: class Array (6)
||||| inline ivar read: Array#@start (slot: 2)
||||| inline ivar read: Array#@total (slot: 0)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
||||| inline ivar read: Array#@tuple (slot: 1)
||||| inlining: Fixnum#< into include?. primitive fixnum_compare_operation (Fixnum)
||||| inlining: Rubinius::Tuple#[] into include?. primitive tuple_at (Rubinius::Tuple)
||||| inlining: Kernel#equal? into include?. primitive object_equal (Symbol)
||||| inlining: String#== into include?. generic primitive: jit_stub_string_equal (String)
||||| inlining: Fixnum#+ into include?. primitive fixnum_add (Fixnum)
|| inlining: writer to '@serial' on Rubinius::CompiledCode in #add_defn_method (slot: 1)

|+ eliding redundant guard: class Rubinius::CompiledCode (53)
|| inlining: Rubinius::ConstantScope#current_script into add_defn_method
||| inlining: read to '@script' on Rubinius::ConstantScope in #current_script
||| inlining: BasicObject#! into current_script (NilClass)
|||| inlining: Rubinius::Type#object_equal into !. primitive Type.object_equal (<nil>)
|||| inlining: Rubinius::Type#object_equal into !. primitive Type.object_equal (<nil>)
||| inlining: BasicObject#! into current_script (Rubinius::CompiledCode::Script)
|||| inlining: Rubinius::Type#object_equal into !. primitive Type.object_equal (<nil>)
|||| inlining: Rubinius::Type#object_equal into !. primitive Type.object_equal (<nil>)
||| inlining: read to '@parent' on Rubinius::ConstantScope in #current_script (slot: 2)
||| inlining: read to '@script' on Rubinius::ConstantScope in #current_script
|| inlining: Rubinius::CompiledCode::Script#eval? into add_defn_method
||| inline ivar read: Rubinius::CompiledCode::Script#@for_eval (abort, using slow lookup)
||| slow ivar read: @for_eval
|| inlining: Rubinius::CompiledCode#dup into add_defn_method. generic primitive: jit_stub_compiledcode_dup (Rubinius::CompiledCode)
||+ eliding redundant guard: class Rubinius::CompiledCode (53)
|| inlining: writer to '@scope' on Rubinius::CompiledCode in #add_defn_method (slot: 14)

| inlining: Object#sum into __script__
|| NOT inlining: Array#size into sum. too few sends: (43220 / 844072) (Array) (interp)
|| inlining: Fixnum#< into sum. primitive fixnum_compare_operation (Fixnum)
|| inlining: Array#[] into sum
||+ eliding redundant guard: class Array (6)
||| inlining: Fixnum#=== into []. primitive fixnum_s_eqq (<nil>)
||| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
||| inline ivar read: Array#@total (slot: 0)
||| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
||| NOT inlining: Rubinius::Type#coerce_to_collection_index into []. too few sends: (2 / 432200) (<nil>) (interp)
||| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
||| inline ivar read: Array#@total (slot: 0)
||| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
||| inline ivar read: Array#@total (slot: 0)
||| inlining: Fixnum#< into []. primitive fixnum_compare_operation (Fixnum)
||| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
||| inline ivar read: Array#@total (slot: 0)
||| inlining: Fixnum#> into []. primitive fixnum_compare_operation (Fixnum)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@start (slot: 2)
||| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
||| inlining: Array#new_range into []. generic primitive: jit_stub_array_new_range (Array)
|||+ eliding redundant guard: class Array (6)
||| inline ivar read: Array#@total (slot: 0)
||| inlining: Fixnum#>= into []. primitive fixnum_compare_operation (Fixnum)
||| inline ivar read: Array#@tuple (slot: 1)
||| inline ivar read: Array#@start (slot: 2)
||| inlining: Fixnum#+ into []. primitive fixnum_add (Fixnum)
||| inlining: Rubinius::Tuple#[] into []. primitive tuple_at (Rubinius::Tuple)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@total (slot: 0)
||| inline ivar read: Array#@tuple (slot: 1)
||| inline ivar read: Array#@start (slot: 2)
|| inlining: Fixnum#+ into sum. primitive fixnum_add (Fixnum)
|| inlining: Fixnum#+ into sum. primitive fixnum_add (Fixnum)
An exception occurred running /var/examples/sum-simple.rb

Thread has been interrupted (Interrupt)

Backtrace:

  { } in RubiniArray#size (1580862387.17920)
| inline ivar read: Array#@total (slot: 0)
 at core/proc.rb:20
               Signal.run_handler at core/signal.rb:64
         Rubinius.received_signal at core/rubinius.rb:277
