diff --git a/ext/llrb/compiler.c b/ext/llrb/compiler.c
index d97a9d9..a994508 100644
--- a/ext/llrb/compiler.c
+++ b/ext/llrb/compiler.c
@@ -974,13 +974,20 @@ llrb_compile_iseq(const struct rb_iseq_constant_body *body, const VALUE *new_ise
   llrb_parse_iseq(body, &cfg);
 
   LLVMModuleRef mod = LLVMModuleCreateWithName("llrb");
+
   LLVMValueRef func = llrb_compile_cfg(mod, body, new_iseq_encoded, &cfg, funcname);
 
+  printf("CFG:\n");
+  llrb_dump_cfg(body, &cfg);
+
+  printf("After CFG:\n");
+  LLVMDumpModule(mod);
+
   extern void llrb_optimize_function(LLVMModuleRef cmod, LLVMValueRef cfunc, bool enable_stats);
-  if (1) llrb_optimize_function(mod, func, enable_stats);
+  llrb_optimize_function(mod, func, enable_stats);
 
-  if (0) llrb_dump_cfg(body, &cfg);
-  if (0) LLVMDumpModule(mod);
+  printf("After optimize:\n");
+  LLVMDumpModule(mod);
 
   llrb_destruct_cfg(&cfg);
   return mod;
diff --git a/ext/llrb/llrb.c b/ext/llrb/llrb.c
index 0743de6..454a780 100644
--- a/ext/llrb/llrb.c
+++ b/ext/llrb/llrb.c
@@ -32,7 +32,9 @@ llrb_create_native_func(LLVMModuleRef mod, const char *funcname)
       return 0;
     }
   }
-  return LLVMGetFunctionAddress(engine, funcname);
+  uint64_t address = LLVMGetFunctionAddress(engine, funcname);
+  printf("[%s installed to %p]\n", funcname, (void *)address);
+  return address;
 }
 
 static void
diff --git a/ext/llrb/profiler.c b/ext/llrb/profiler.c
index 30ad3a6..b9ac908 100644
--- a/ext/llrb/profiler.c
+++ b/ext/llrb/profiler.c
@@ -8,7 +8,7 @@
 
 #define LLRB_PROFILE_INTERVAL_USEC 1000
 #define LLRB_COMPILE_INTERVAL_TIMES 200
-#define LLRB_ENABLE_DEBUG 0
+#define LLRB_ENABLE_DEBUG 1
 
 struct llrb_sample {
   size_t total_calls; // Total count of stack-top occurrence
